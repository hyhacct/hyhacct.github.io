{"title":"利用zabbix api计算流量月95值","uid":"5cd89c20fd6a2aad9144cf965a99cbdc","slug":"2025-07-18-07","date":"2025-07-18T14:12:49.000Z","updated":"2025-09-23T01:59:03.129Z","comments":true,"path":"api/articles/2025-07-18-07.json","keywords":null,"cover":null,"content":"<h2 id=\"直接提供脚本\"><a href=\"#直接提供脚本\" class=\"headerlink\" title=\"直接提供脚本\"></a>直接提供脚本</h2><p>虽然这个脚本是让 AI 帮忙写的,但经过实际验证,是有效的,并且我一直在使用</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意这的 1,2,3 步骤中的一些参数需要自己配置,比如时间范围,单位换算,文件路径等.</p>\n<p>根据你实际情况改改,另外就是一些必备软件包得装一下,比如<code>jq bc curl</code>什么的.</p>\n<p>最重要的是<code>ITEM_ID</code>这个变量,你需要从 zabbix 中找到你想计算 95 的流量图,然后把他的 <code>itemid</code> 拿出来.</p></blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/env bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. Zabbix API 参数配置</span></span><br><span class=\"line\">ZABBIX_URL=<span class=\"string\">&quot;https://xxxxxxx/api_jsonrpc.php&quot;</span> <span class=\"comment\"># 你的 zabbix API 地址</span></span><br><span class=\"line\">ITEM_ID=<span class=\"string\">&quot; 123456&quot;</span> <span class=\"comment\"># 你的 item id,这个是流量图的 itemid,可以自己找一下</span></span><br><span class=\"line\">AUTH_TOKEN=<span class=\"string\">&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;</span> <span class=\"comment\"># 你的 auth token</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 时间范围,假设（2025-04-01 ~ 2025-04-30）</span></span><br><span class=\"line\">TIME_FROM=1743436800 <span class=\"comment\"># 2025-04-01 00:00:00 转换到对应的秒级时间戳</span></span><br><span class=\"line\">TIME_TILL=1746028799 <span class=\"comment\"># 2025-04-30 23:59:59 转换到对应的秒级时间戳</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 单位换算：字节 =&gt; MB</span></span><br><span class=\"line\">BYTES_TO_MB=1048576</span><br><span class=\"line\">JSON_PATH=<span class=\"string\">&quot;/tmp/zabbix.json&quot;</span> <span class=\"comment\"># zbx 请求数据</span></span><br><span class=\"line\">CSV_PATH=<span class=\"string\">&quot;/tmp/zabbix_full_data.csv&quot;</span> <span class=\"comment\"># 全量数据(每 5 分钟一个点的 95 值)</span></span><br><span class=\"line\">ROW_PATH=<span class=\"string\">&quot;/tmp/zabbix_row_data.csv&quot;</span> <span class=\"comment\"># 每分钟数据</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 获取历史数据（只下载一次）</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -f <span class=\"string\">&quot;<span class=\"variable\">$JSON_PATH</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;拉取 Zabbix 数据中...&quot;</span></span><br><span class=\"line\">  RESPONSE=$(curl -s <span class=\"string\">&quot;<span class=\"variable\">$ZABBIX_URL</span>&quot;</span> \\</span><br><span class=\"line\">    -H <span class=\"string\">&quot;Content-Type: application/json&quot;</span> \\</span><br><span class=\"line\">    --data-raw <span class=\"string\">&quot;&#123;</span></span><br><span class=\"line\"><span class=\"string\">    \\&quot;jsonrpc\\&quot;: \\&quot;2.0\\&quot;,</span></span><br><span class=\"line\"><span class=\"string\">    \\&quot;id\\&quot;: 1,</span></span><br><span class=\"line\"><span class=\"string\">    \\&quot;method\\&quot;: \\&quot;history.get\\&quot;,</span></span><br><span class=\"line\"><span class=\"string\">    \\&quot;params\\&quot;: &#123;</span></span><br><span class=\"line\"><span class=\"string\">      \\&quot;output\\&quot;: \\&quot;extend\\&quot;,</span></span><br><span class=\"line\"><span class=\"string\">      \\&quot;itemids\\&quot;: \\&quot;<span class=\"variable\">$ITEM_ID</span>\\&quot;,</span></span><br><span class=\"line\"><span class=\"string\">      \\&quot;history\\&quot;: 3,</span></span><br><span class=\"line\"><span class=\"string\">      \\&quot;time_from\\&quot;: <span class=\"variable\">$TIME_FROM</span>,</span></span><br><span class=\"line\"><span class=\"string\">      \\&quot;time_till\\&quot;: <span class=\"variable\">$TIME_TILL</span>,</span></span><br><span class=\"line\"><span class=\"string\">      \\&quot;sortfield\\&quot;: [\\&quot;clock\\&quot;, \\&quot;itemid\\&quot;],</span></span><br><span class=\"line\"><span class=\"string\">      \\&quot;sortorder\\&quot;: \\&quot;ASC\\&quot;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;,</span></span><br><span class=\"line\"><span class=\"string\">    \\&quot;auth\\&quot;: \\&quot;<span class=\"variable\">$AUTH_TOKEN</span>\\&quot;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$RESPONSE</span>&quot;</span> &gt;<span class=\"string\">&quot;<span class=\"variable\">$JSON_PATH</span>&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  RESPONSE=$(awk <span class=\"string\">&#x27;NF&#x27;</span> <span class=\"string\">&quot;<span class=\"variable\">$JSON_PATH</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5. 提取时间和流量，转换为 MB，并写入 CSV 文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;Timestamp,Datetime,Value(MB)&quot;</span> &gt;<span class=\"string\">&quot;<span class=\"variable\">$CSV_PATH</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 暂存 5 分钟分组后的最大值</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -A GROUPED_MAX</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 从 JSON 中提取数据并分组</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> IFS= <span class=\"built_in\">read</span> -r line; <span class=\"keyword\">do</span></span><br><span class=\"line\">  CLOCK=$(<span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$line</span>&quot;</span> | jq -r <span class=\"string\">&#x27;.clock&#x27;</span>)</span><br><span class=\"line\">  VALUE=$(<span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$line</span>&quot;</span> | jq -r <span class=\"string\">&#x27;.value&#x27;</span>)</span><br><span class=\"line\">  VALUE_MB=$(awk -v val=<span class=\"string\">&quot;<span class=\"variable\">$VALUE</span>&quot;</span> -v <span class=\"built_in\">factor</span>=<span class=\"string\">&quot;<span class=\"variable\">$BYTES_TO_MB</span>&quot;</span> <span class=\"string\">&#x27;BEGIN &#123;printf &quot;%.2f&quot;, val / factor&#125;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 向下取整到 5 分钟（300 秒）粒度</span></span><br><span class=\"line\">  GROUP_TS=$((CLOCK / <span class=\"number\">300</span> * <span class=\"number\">300</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 如果该组未存在，或当前值更大，更新最大值</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [[ -z <span class=\"string\">&quot;<span class=\"variable\">$&#123;GROUPED_MAX[$GROUP_TS]&#125;</span>&quot;</span> ]] || (($(echo &quot;<span class=\"variable\">$VALUE_MB</span> &gt; <span class=\"variable\">$&#123;GROUPED_MAX[$GROUP_TS]&#125;</span>&quot; | bc -l))); <span class=\"keyword\">then</span></span><br><span class=\"line\">    GROUPED_MAX[<span class=\"variable\">$GROUP_TS</span>]=<span class=\"variable\">$VALUE_MB</span></span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 写出每分钟的数据,带可读时间</span></span><br><span class=\"line\">  DATETIME=$(<span class=\"built_in\">date</span> -d <span class=\"string\">&quot;@<span class=\"variable\">$CLOCK</span>&quot;</span> <span class=\"string\">&quot;+%Y-%m-%d %H:%M:%S&quot;</span>)</span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$DATETIME</span>,<span class=\"variable\">$VALUE_MB</span>&quot;</span> &gt;&gt;<span class=\"string\">&quot;<span class=\"variable\">$ROW_PATH</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">done</span> &lt; &lt;(<span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$RESPONSE</span>&quot;</span> | jq -c <span class=\"string\">&#x27;.result | sort_by(.clock)[]&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 提取排序后的 5 分钟粒度时间点和值，写入 CSV，并保存值用于 P95</span></span><br><span class=\"line\">VALUES_MB=()</span><br><span class=\"line\"><span class=\"keyword\">for</span> ts <span class=\"keyword\">in</span> $(<span class=\"built_in\">printf</span> <span class=\"string\">&quot;%s\\n&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;!GROUPED_MAX[@]&#125;</span>&quot;</span> | <span class=\"built_in\">sort</span> -n); <span class=\"keyword\">do</span></span><br><span class=\"line\">  val=<span class=\"string\">&quot;<span class=\"variable\">$&#123;GROUPED_MAX[$ts]&#125;</span>&quot;</span></span><br><span class=\"line\">  datetime=$(<span class=\"built_in\">date</span> -d <span class=\"string\">&quot;@<span class=\"variable\">$ts</span>&quot;</span> <span class=\"string\">&quot;+%Y-%m-%d %H:%M:%S&quot;</span>)</span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$ts</span>,<span class=\"variable\">$datetime</span>,<span class=\"variable\">$val</span>&quot;</span> &gt;&gt;<span class=\"string\">&quot;<span class=\"variable\">$CSV_PATH</span>&quot;</span></span><br><span class=\"line\">  VALUES_MB+=(<span class=\"string\">&quot;<span class=\"variable\">$val</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6. 统计与 P95 计算</span></span><br><span class=\"line\">TOTAL=<span class=\"variable\">$&#123;#VALUES_MB[@]&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ <span class=\"variable\">$TOTAL</span> -lt 1 ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;未获取到有效数据，退出。&quot;</span></span><br><span class=\"line\">  <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">SORTED=($(<span class=\"built_in\">printf</span> <span class=\"string\">&quot;%s\\n&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;VALUES_MB[@]&#125;</span>&quot;</span> | <span class=\"built_in\">sort</span> -n))</span><br><span class=\"line\">PERCENTILE_INDEX=$(<span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$TOTAL</span> * 0.95&quot;</span> | bc | awk <span class=\"string\">&#x27;&#123;printf(&quot;%d&quot;, ($1==int($1))?$1:$1+1)&#125;&#x27;</span>)</span><br><span class=\"line\">P95_VALUE=<span class=\"variable\">$&#123;SORTED[$((PERCENTILE_INDEX - 1))]&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 7. 输出汇总</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;✅ 数据点总数: <span class=\"variable\">$TOTAL</span>&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;📈 95 百分位位置: <span class=\"variable\">$PERCENTILE_INDEX</span>&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;📊 整体 95 值: <span class=\"variable\">$P95_VALUE</span> MB&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;📁 CSV 文件已生成: <span class=\"variable\">$CSV_PATH</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"最终结果\"><a href=\"#最终结果\" class=\"headerlink\" title=\"最终结果\"></a>最终结果</h2><p>大概长这样:</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">✅ 数据点总数: 3589</span><br><span class=\"line\"></span><br><span class=\"line\">📈 95 百分位位置: 3410</span><br><span class=\"line\"></span><br><span class=\"line\">📊 整体 95 值: 1955.15 MB</span><br><span class=\"line\"></span><br><span class=\"line\">📁 CSV 文件已生成: /tmp/zabbix_full_data.csv</span><br></pre></td></tr></table></figure>\n","text":"直接提供脚本虽然这个脚本是让 AI 帮忙写的,但经过实际验证,是有效的,并且我一直在使用 注意这的 1,2,3 步骤中的一些参数需要自己配置,比如时间范围,单位...","permalink":"/post/2025-07-18-07","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"运维","slug":"运维","count":10,"path":"api/categories/运维.json"}],"tags":[{"name":"zabbix 月95","slug":"zabbix-月95","count":1,"path":"api/tags/zabbix-月95.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9B%B4%E6%8E%A5%E6%8F%90%E4%BE%9B%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">直接提供脚本</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%80%E7%BB%88%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">最终结果</span></a></li></ol>","author":{"name":"Reverse","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"每一次的突破，都是自我超越的见证。","socials":{"github":"https://github.com/hyhacct","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"在Linux下创建System服务单元","uid":"cb4e47217e236130c02e8a1c94b69087","slug":"2025-07-18-09","date":"2025-07-18T14:16:37.000Z","updated":"2025-09-23T01:59:03.130Z","comments":true,"path":"api/articles/2025-07-18-09.json","keywords":null,"cover":null,"text":"概述Systemd 是 Linux 系统的一种初始化系统（init），主要负责控制系统的启动和运行，并提供了一种基于服务的管理机制。它取代了传统的 init 系...","permalink":"/post/2025-07-18-09","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"运维","slug":"运维","count":10,"path":"api/categories/运维.json"}],"tags":[{"name":"服务单元 Linux","slug":"服务单元-Linux","count":2,"path":"api/tags/服务单元-Linux.json"}],"author":{"name":"Reverse","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"每一次的突破，都是自我超越的见证。","socials":{"github":"https://github.com/hyhacct","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"利用nftables做端口流量统计","uid":"c59c56761bc7b0b0394e25c388e5d7f6","slug":"2025-07-18-06","date":"2025-07-18T14:10:07.000Z","updated":"2025-09-23T01:59:03.129Z","comments":true,"path":"api/articles/2025-07-18-06.json","keywords":null,"cover":null,"text":"概述通过nftables规则对特定端口范围做计数流量统计,可以借此计算瞬时流量. 写规则假设这里我统计的是11000-19000端口范围的流量,入站和出站都统计...","permalink":"/post/2025-07-18-06","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"运维","slug":"运维","count":10,"path":"api/categories/运维.json"}],"tags":[{"name":"nftables","slug":"nftables","count":1,"path":"api/tags/nftables.json"}],"author":{"name":"Reverse","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"每一次的突破，都是自我超越的见证。","socials":{"github":"https://github.com/hyhacct","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}