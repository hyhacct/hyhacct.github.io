{"title":"在Linux下创建System服务单元","uid":"cb4e47217e236130c02e8a1c94b69087","slug":"2025-07-18-09","date":"2025-07-18T14:16:37.000Z","updated":"2025-08-02T02:07:02.971Z","comments":true,"path":"api/articles/2025-07-18-09.json","keywords":null,"cover":null,"content":"<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Systemd 是 Linux 系统的一种初始化系统（init），主要负责控制系统的启动和运行，并提供了一种基于服务的管理机制。它取代了传统的 init 系统，成为现代 Linux 发行版的标准。</p>\n<p>这里假设我需要为我的应用创建一个名字叫<code>project-apps.service</code>的服务单元。</p>\n<h2 id=\"创建服务单元\"><a href=\"#创建服务单元\" class=\"headerlink\" title=\"创建服务单元\"></a>创建服务单元</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &gt;/etc/systemd/system/project-apps.service &lt;&lt;<span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">[Unit]</span></span><br><span class=\"line\"><span class=\"string\">Description=project-apps Service</span></span><br><span class=\"line\"><span class=\"string\">After=network.target</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[Service]</span></span><br><span class=\"line\"><span class=\"string\">ExecStart=/usr/local/bin/project-apps</span></span><br><span class=\"line\"><span class=\"string\">Restart=always</span></span><br><span class=\"line\"><span class=\"string\">User=nobody</span></span><br><span class=\"line\"><span class=\"string\">Group=nogroup</span></span><br><span class=\"line\"><span class=\"string\">Environment=PATH=/usr/local/bin:/usr/bin:/bin</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[Install]</span></span><br><span class=\"line\"><span class=\"string\">WantedBy=multi-user.target</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> project-apps.service</span><br><span class=\"line\">systemctl restart project-apps.service</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>cat &gt;</code>: 使用 cat 命令将后续内容写入文件。</li>\n<li><code>/etc/systemd/system/project-apps.service</code>: 指定文件路径，systemd 服务单元文件通常存放在 &#x2F;etc&#x2F;systemd&#x2F;system&#x2F; 目录下。</li>\n<li><code>&lt;&lt;EOF ... EOF</code>: 使用 heredoc 语法，将多行内容写入文件，直到遇到 EOF 标记。</li>\n</ul>\n<h3 id=\"Unit-部分\"><a href=\"#Unit-部分\" class=\"headerlink\" title=\"[Unit] 部分\"></a>[Unit] 部分</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=project-apps Service</span><br><span class=\"line\">After=network.target</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>Description</code>: 服务描述，显示为 Dcim Service，用于标识服务的用途。</li>\n<li><code>After=network.target</code>: 指定服务在 network.target（网络服务）启动后再启动，确保网络可用。</li>\n</ul>\n<h3 id=\"Service-部分\"><a href=\"#Service-部分\" class=\"headerlink\" title=\"[Service] 部分\"></a>[Service] 部分</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Service]</span><br><span class=\"line\">ExecStart=/usr/local/bin/project-apps</span><br><span class=\"line\">Restart=always</span><br><span class=\"line\">User=nobody</span><br><span class=\"line\">Group=nogroup</span><br><span class=\"line\">Environment=PATH=/usr/local/bin:/usr/bin:/bin</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>ExecStart</code>: 指定服务启动时执行的命令 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;project-apps。这意味着有一个可执行文件 project-apps 位于 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;。</li>\n<li><code>Restart=always</code>: 如果服务因任何原因停止（例如崩溃），systemd 将自动重启服务。</li>\n<li><code>User=nobody</code>: 服务以 nobody 用户身份运行，这是一个低权限用户，用于提高安全性。</li>\n<li><code>Group=nogroup</code>: 服务以 nogroup 组身份运行，同样是为了限制权限。</li>\n<li><code>Environment</code>: 设置环境变量 PATH，确保服务可以找到 &#x2F;usr&#x2F;local&#x2F;bin、&#x2F;usr&#x2F;bin 和 &#x2F;bin 目录中的可执行文件。</li>\n</ul>\n<h3 id=\"Install-部分\"><a href=\"#Install-部分\" class=\"headerlink\" title=\"[Install] 部分\"></a>[Install] 部分</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>WantedBy=multi-user.target</code>: 指定服务在 multi-user.target（多用户模式，相当于系统启动到命令行环境）时启用。这是典型的非图形化服务的目标。</li>\n</ul>\n<h2 id=\"后续操作\"><a href=\"#后续操作\" class=\"headerlink\" title=\"后续操作\"></a>后续操作</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>systemctl daemon-reload</code>: 通知 systemd 重新加载配置文件。因为我们刚刚创建或修改了 dcim.service 文件，此命令确保 systemd 识别新的服务定义。</li>\n<li>需要 sudo 权限，因为修改 systemd 配置是系统级操作。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">enable</span> project-apps.service</span><br><span class=\"line\">systemctl restart project-apps.service</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>systemctl enable project-apps.service</code>: 启用服务，使其在系统启动时自动启动。</li>\n<li><code>systemctl restart project-apps.service</code>: 重新启动服务，确保配置生效。</li>\n</ul>\n<p>另外，如果需要查看服务状态，可以使用以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl status project-apps.service</span><br></pre></td></tr></table></figure>\n\n<p>希望查看服务日志，可以使用以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">journalctl -u project-apps.service</span><br></pre></td></tr></table></figure>\n","text":"概述Systemd 是 Linux 系统的一种初始化系统（init），主要负责控制系统的启动和运行，并提供了一种基于服务的管理机制。它取代了传统的 init 系...","permalink":"/post/2025-07-18-09","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"运维","slug":"运维","count":7,"path":"api/categories/运维.json"}],"tags":[{"name":"服务单元 Linux","slug":"服务单元-Linux","count":2,"path":"api/tags/服务单元-Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">概述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%8D%95%E5%85%83\"><span class=\"toc-text\">创建服务单元</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Unit-%E9%83%A8%E5%88%86\"><span class=\"toc-text\">[Unit] 部分</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Service-%E9%83%A8%E5%88%86\"><span class=\"toc-text\">[Service] 部分</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Install-%E9%83%A8%E5%88%86\"><span class=\"toc-text\">[Install] 部分</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%90%8E%E7%BB%AD%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">后续操作</span></a></li></ol>","author":{"name":"Reverse","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"每一次的突破，都是自我超越的见证。","socials":{"github":"https://github.com/hyhacct","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"在Linux下创建Supervisord服务单元","uid":"412695f5eb189a644d181b95b6e4062a","slug":"2025-07-18-08","date":"2025-07-18T14:16:37.000Z","updated":"2025-08-02T02:07:02.971Z","comments":true,"path":"api/articles/2025-07-18-08.json","keywords":null,"cover":null,"text":"概述Supervisord 是一个轻量级的进程管理工具。它允许创建和管理多个进程，并提供一些高级功能，如进程监控、自动重启、日志管理等。 他和 Systemd ...","permalink":"/post/2025-07-18-08","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"运维","slug":"运维","count":7,"path":"api/categories/运维.json"}],"tags":[{"name":"服务单元 Linux","slug":"服务单元-Linux","count":2,"path":"api/tags/服务单元-Linux.json"}],"author":{"name":"Reverse","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"每一次的突破，都是自我超越的见证。","socials":{"github":"https://github.com/hyhacct","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"利用zabbix api计算流量月95值","uid":"5cd89c20fd6a2aad9144cf965a99cbdc","slug":"2025-07-18-07","date":"2025-07-18T14:12:49.000Z","updated":"2025-08-02T02:07:02.970Z","comments":true,"path":"api/articles/2025-07-18-07.json","keywords":null,"cover":null,"text":"直接提供脚本虽然这个脚本是让 AI 帮忙写的,但经过实际验证,是有效的,并且我一直在使用 注意这的 1,2,3 步骤中的一些参数需要自己配置,比如时间范围,单位...","permalink":"/post/2025-07-18-07","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"运维","slug":"运维","count":7,"path":"api/categories/运维.json"}],"tags":[{"name":"zabbix 月95","slug":"zabbix-月95","count":1,"path":"api/tags/zabbix-月95.json"}],"author":{"name":"Reverse","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"每一次的突破，都是自我超越的见证。","socials":{"github":"https://github.com/hyhacct","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}